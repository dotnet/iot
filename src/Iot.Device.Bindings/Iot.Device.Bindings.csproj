<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net6.0</TargetFrameworks>
    <LangVersion>10</LangVersion>
    <Nullable>enable</Nullable>
    <DefineConstants>$(DefineConstants);BUILDING_IOT_DEVICE_BINDINGS</DefineConstants>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <EnableDefaultItems>false</EnableDefaultItems>
    <IsPackable>true</IsPackable>
    <DeviceRoot>$(MSBuildThisFileDirectory)../devices/</DeviceRoot>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <ProduceReferenceAssembly>true</ProduceReferenceAssembly>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage)</TargetsForTfmSpecificContentInPackage>
    <!--Partial elements should declare access modifier: Disabled for this project to simplify handling in common project. See also there.
    If we disable this here, the warning is still emmited for the individual projects.-->
    <NoWarn>$(NoWarn);SA1205</NoWarn>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>
  
  <ItemGroup>
    <!-- Excluding samples and test projects when getting source files -->
    <_ExcludeProjectReferences Include="$(DeviceRoot)**/samples/**/*.csproj" />
    <_ExcludeProjectReferences Include="$(DeviceRoot)**/tests/**/*.csproj" />
    <_ExcludeProjectReferences Include="$(DeviceRoot)SkiaSharpAdapter/*.csproj" />
  </ItemGroup>

  <!-- The following ItemGroup is in charge of getting the source files we will compile on each TFM -->
  <ItemGroup>
    <ProjectReference Include="$(DeviceRoot)**/*.csproj" Exclude="@(_ExcludeProjectReferences)" ReferenceOutputAssembly="false" BuildReference="false" />
    <Content Include="$(RepoRoot)/src/devices/README-nuget.md" Pack="true" Visible="false" PackagePath="\README.md" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="System.IO.Ports" Version="$(SystemIOPortsPackageVersion)" />
    <PackageReference Include="System.IO.Pipelines" Version="$(SystemIOPipelinesVersion)" />
    <ProjectReference Include="$(MainLibraryPath)System.Device.Gpio.csproj" />
    <PackageReference Include="System.Management" Version="$(SystemManagementPackageVersion)" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="$(MicrosoftExtensionsLoggingAbstractionsPackageVersion)" />
    <PackageReference Include="System.Text.Json" Version="$(SystemTextJsonPackageVersion)" />
    <!-- This package is only used for windows specific stuff. -->
    <PackageReference Include="System.Drawing.Common" Version="$(SystemDrawingCommonPackageVersion)" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework) == 'netstandard2.0'">
    <PackageReference Include="Microsoft.Bcl.HashCode" Version="1.1.1" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="../devices/CharacterLcd/BigFontMap.txt" />
    <EmbeddedResource Include="../devices/BuildHat/data/firmware.bin" />
    <EmbeddedResource Include="../devices/BuildHat/data/signature.bin"/>
    <EmbeddedResource Include="../devices/BuildHat/data/version" />
  </ItemGroup>
  <!-- This target will call into each device binding project to get out the source files for the framework we are building
  and then it will add the results to the Compile item group. -->
  <Target Name="GetCompileItemsFromProjects"
          BeforeTargets="BeforeBuild"
          DependsOnTargets="PrepareProjectReferences"
          Condition="'$(TargetFramework)' != ''">
    <ItemGroup>
      <_projectsToGetCompileItemsFrom Include="@(_MSBuildProjectReferenceExistent)" Exclude="$(MainLibraryPath)System.Device.Gpio.csproj" />
    </ItemGroup>

    <MSBuild Projects="%(_projectsToGetCompileItemsFrom.Identity)"
             Targets="GetCompileItemsForTargetFramework"
             Properties="TargetFramework=%(_projectsToGetCompileItemsFrom.NearestTargetFramework)"
             BuildInParallel="true">
      <Output ItemName="_CompileItemsFromProjects" TaskParameter="TargetOutputs" />
    </MSBuild>

    <ItemGroup>
      <Compile Include="%(_CompileItemsFromProjects.Identity)" />      
    </ItemGroup>
  </Target>

</Project>
